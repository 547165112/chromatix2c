/*========================================================================
                          C H R O M A T I X

   DESCRIPTION
   Auto-Generated by Chromatix tool defining camera tunable parameters.

Copyright (c) 2013 QUALCOMM Technologies Incorporated. All Rights Reserved.
Qualcomm Technologies Incorporated Proprietary and Confidential.
Export of this technology or software is regulated by the U.S. Government.
Diversion contrary to U.S. law prohibited.
==========================================================================*/

/* Chromatix common DMSS header file version number */
`xu2`,
`xu1+1`, // Not compressed
`xu2+2`, // Revision

/******************************************************************************/
// Feature name : linearization.
/******************************************************************************/

/* Linearization */
{
   `xu1+3`, /* Control Method - 1 = Gain, 0 = Lux Index */

/******************************************************************************/
// Feature name : linearization low-light trigger point.
/******************************************************************************/

   /* Low-Light Trigger Points */
   {
      `xf4`, /* Gain Start */
      `xf4`, /* Gain End */
      `xu4`, /* Lux Index Start */
      `xu4`, /* Lux Index End */
   },
   /* A CCT Trigger */
   {
      `xu4`, /* Start */
      `xu4`, /* End */
   },
   /* D65 CCT Trigger */
   {
      `xu4`, /* Start */
      `xu4`, /* End */
   },

/******************************************************************************/
// Feature name: Linearization.
// Applicale chipset(s): MSM8960 (Waverider), MSM8660A (Aurora), (Badger).
// Applicable operation mode:
//     Viewfinder, snapshot processing, and video modes.
//
// Note: For MSM8960, it needs only one set of the following variables;
//       For MSM8660A and Badger with native 3D support, it needs two sets of
//       the following variables -- one set for the left image (default set when
//       3D support is off) and another set for the right image.
//
// variable name: r_lut_p[8];  // HW: 12uQ0
//  Input knee points of the 9 segments (0, 1, ..., 8) of the linearization
//  curve of R channel, with segment 0 knee point defaulted to 0 hence excluded
//  from the list.
// Default value: {(black_level), (4095 - black_level) / 8 + black_level, ...,
//                 7 * (4095 - black_level) / 8} + black_level}.
// Data range: 0 to 4095.
// Effect: Changing knee points changes the shape of the linearization curve.
//
// Variable name: r_lut_base[9];  // HW: 12uQ0
//  Output base values at the starting point of the 9 segments of the
//  linearization curve of R channel.
// Default value: {0, 0, (4095 - black_level) / 8, ...,
//                 7 * (4095 - black_level) / 8}.
// Data range: 0 to 4095.
// Effect: Changing base points changes the shape of the linearization curve.
//
// Variable name: r_lut_delta[9];  // HW: 18uQ9
//  Slopes of the 9 segments of the linearization curve of R channel.
// Default value: {0, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9}.
// Data range: 0.0 to 511.99.
// Effect: Changing slopes changes the shape of the linearization curve.
//
// Variable name: gr_lut_p[8];  // HW: 12uQ0
//  Input knee points of the 9 segments (0, 1, ..., 8) of the linearization
//  curve of Gr channel, with segment 0 knee point defaulted to 0 hence excluded
//  from the list.
// default value: {(black_level), (4095 - black_level) / 8 + black_level, ...,
//                 7 * (4095 - black_level) / 8} + black_level}.
// Data range: 0 to 4095.
// Effect: Changing knee points changes the shape of the linearization curve.
//
// Variable name: gr_lut_base[9];  // HW: 12uQ0
//  Output base values at the starting point of the 9 segments of the
//  linearization curve of Gr channel.
// Default value: {0, 0, (4095 - black_level) / 8, ...,
//                 7 * (4095 - black_level) / 8}.
// Data range: 0 to 4095.
// Effect: Changing base points changes the shape of the linearization curve.
//
// Variable name: gr_lut_delta[9];  // HW: 18uQ9
//  Slopes of the 9 segments of the linearization curve of Gr channel.
// Default value: {0, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9}.
// Data range: 0.0 to 511.99.
// Effect: Changing slopes changes the shape of the linearization curve.
//
// Variable name: gb_lut_p[8];  // HW: 12uQ0
//  Input knee points of the 9 segments (0, 1, ..., 8) of the linearization
//  curve of Gb channel, with segment 0 knee point defaulted to 0 hence excluded
//  from the list.
// Default value: {(black_level), (4095 - black_level) / 8 + black_level, ...,
//                 7 * (4095 - black_level) / 8} + black_level}.
// Data range: 0 to 4095.
// Effect: Changing knee points changes the shape of the linearization curve.
//
// Variable name: gb_lut_base[9];  // HW: 12uQ0
//  Output base values at the starting point of the 9 segments of the
//  linearization curve of Gb channel.
// Default value: {0, 0, (4095 - black_level) / 8, ...,
//                 7 * (4095 - black_level) / 8}.
// Data range: 0 to 4095.
// Effect: Changing base points changes the shape of the linearization curve.
//
// Variable name: gb_lut_delta[9];  // HW: 18uQ9
//  Slopes of the 9 segments of the linearization curve of Gb channel.
// Default value: {0, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9}.
// Data range: 0.0 to 511.99.
// Effect: Changing slopes changes the shape of the linearization curve.
//
// Variable name: b_lut_p[8];  // HW: 12uQ0
//  Input knee points of the 9 segments (0, 1, ..., 8) of the linearization
//  curve of B channel, with segment 0 knee point defaulted to 0 hence excluded
//  from the list.
// Default value: {(black_level), (4095 - black_level) / 8 + black_level, ...,
//                 7 * (4095 - black_level) / 8} + black_level}.
// Data range: 0 to 4095.
// Effect: Changeing knee points changes the shape of the linearization curve.
//
// Variable name: b_lut_base[9];  // HW: 12uQ0
//  Output base values at the starting point of the 9 segments of the
//  linearization curve of B channel.
// Default value: {0, 0, (4095 - black_level) / 8, ...,
//                 7 * (4095 - black_level) / 8}.
// Data range: 0 to 4095.
// Effect: Changing base points changes the shape of the linearization curve.
//
// Variable name: b_lut_delta[9];  // HW: 18uQ9
//  Slopes of the 9 segments of the linearization curve of B channel
// Default value: {0, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9, 512Q9}.
// Data range: 0.0 to 511.99.
// Effect: Changing slopes changes the shape of the linearization curve.
//
/******************************************************************************/

   /* A Low-Light */
   {
      /* Red */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GR */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GB */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* Blue */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
   },
   /* A Normal Light */
   {
      /* Red */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GR */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GB */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* Blue */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
   },
   /* TL84 Low-Light */
   {
      /* Red */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GR */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GB */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* Blue */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
   },
   /* TL84 Normal Light */
   {
      /* Red */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GR */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GB */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* Blue */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
   },
   /* D65 Low-Light */
   {
      /* Red */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GR */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GB */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* Blue */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
   },
   /* D65 Normal Light */
   {
      /* Red */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GR */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* GB */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
      /* Blue */
      {
         `xu2a8`
      },
      {
         `xu2a9+2`
      },
      {
         `xf4a9`
      },
   },
},
/* Lens Rolloff */
{

/*********************************************************************/
// Feature name :
// Use gain or lux_index to control rolloff correction.
// Range: 0 or 1.
// 0 means to use lux_index to control.
// 1 means to use gain to control.
/*********************************************************************/

   `xu1+3`, /* Control Method - 1 = Gain, 0 = Lux Index */
   /* Low-Light Trigger Points */
   {
      `xf4`, /* Gain Start */
      `xf4`, /* Gain End */
      `xu4`, /* Lux Index Start */
      `xu4`, /* Lux Index End */
   },
   /* A CCT Trigger */
   {
      `xu4`, /* Start */
      `xu4`, /* End */
   },
   /* D65 CCT Trigger */
   {
      `xu4`, /* Start */
      `xu4`, /* End */
   },

/******************************************************************************/
// applicable chipset: all chipsets.
// 3A version: N/A
// applicable operation mode: snapshot.
//
// variable name: rolloff_LED_start
// Trigger point used to interpolate between LED rolloff and ambient rolloff.
//	Use gainxINTL_LED_off/gainxINTL_LED_on as the trigger metric.
// default value: 1
// data range: 1~7
// constraints: none
// effect: The bigger the value is, LED rolloff is kicked in later.
//
// variable name: rolloff_LED_end
// Trigger point used to interpolate between LED rolloff and ambient rolloff.
//	Use gainxINTL_LED_off/gainxINTL_LED_on as the trigger metric.
// default value: 7
// data range: 1~7
// constraints: none
// effect: The bigger the value is, 100% LED rolloff is used later.
/******************************************************************************/

   `xf4`, /* LED Mesh Rolloff Start */
   `xf4`, /* LED Mesh Rolloff End */

/******************************************************************************/
// variable name: rolloff_Strobe_start
// please see information under rolloff_LED_start.
//
// variable name: rolloff_Strobe_end
// please see information under rolloff_LED_end.
/******************************************************************************/

   `xf4`, /* Strobe Mesh Rolloff Start */
   `xf4`, /* Strobe Mesh Rolloff End */
   /* Normal Light Rolloff */
   {

/*********************************************************************/
// Feature name :
// Mesh rolloff under fluorescence illuminant.
// This is used in QSC6270(6240), QSC6295, QSD8x50.
/*********************************************************************/

      /* TL84 Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },

/*********************************************************************/
// Feature name :
// Mesh rolloff under A and H illuminant.
// This is used in QSC6270(6240), QSC6295, QSD8x50.
/*********************************************************************/

      /* A Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },

/*********************************************************************/
// Feature name :
// Mesh rolloff under daylight illuminant.
// This is used in QSC6270(6240), QSC6295, QSD8x50.
/*********************************************************************/

      /* D65 Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },

/*********************************************************************/
// Feature name :
// Mesh rolloff under lowlight illuminant.
// This is used in QSC6270(6240), QSC6295, QSD8x50.
/*********************************************************************/

   },
   /* Low-Light Rolloff */
   {
      /* TL84 Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },
      /* A Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },
      /* D65 Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },
   },
   /* Golden Module Rolloff */
   {
      /* TL84 Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },
      /* A Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
         },
      /* D65 Mesh Lens Rolloff */
      {
         `xu2+2`,
         /* R Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GR Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* GB Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         },
         /* B Gain */
         {
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`,
            `xf4a17`
         }
      },
   },
   /* LED Mesh Rolloff */
   {
      `xu2+2`,
      /* R Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      },
      /* GR Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      },
      /* GB Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      },
      /* B Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      }
      },
   /* Strobe Mesh Rolloff */
   {
      `xu2+2`,
      /* R Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      },
      /* GR Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      },
      /* GB Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      },
      /* B Gain */
      {
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`,
         `xf4a17`
      }
      },
},
/* LA Special Effects */
{
   /* Backlit */
   {
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`
   },
   /* Solarize */
   {
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`
   },
   /* Posterize */
   {
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`
   },
   /* Blackboard */
   {
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`
   },
   /* Whiteboard */
   {
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`,
      `xf4a8`
   },
},

/******************************************************************/
